model ArchenemyCard {
  // Core identifiers
  id         String @id @default(cuid())
  scryfallId String @unique
  oracleId   String

  // Basic card information
  name       String
  lang       String   @default("en")
  releasedAt DateTime

  // Game mechanics - the important stuff
  manaCost      String
  cmc           Float
  typeLine      String
  oracleText    String?
  flavorText    String?
  colors        String[]
  colorIdentity String[]
  keywords      String[]

  // Set information
  setCode         String
  setName         String
  setType         String
  collectorNumber String

  // Card details
  rarity      String
  artist      String
  layout      String
  borderColor String
  frame       String

  // Essential flags
  foil    Boolean @default(false)
  nonfoil Boolean @default(true)
  digital Boolean @default(false)

  // Image URLs - using large image, others commented for future use
  imageLarge String
  // imageSmall   String?
  // imageNormal  String?
  // imagePng     String?
  // imageArtCrop String?
  // imageBorderCrop String?

  // Legal formats - commented out for Archenemy-only use case
  // legalStandard  String?
  // legalModern    String?
  // legalLegacy    String?
  // legalVintage   String?
  // legalCommander String?
  // legalPioneer   String?
  // legalHistoric  String?
  // legalPauper    String?
  // legalBrawl     String?

  // Pricing - commented out for future use
  // priceUsd       String?
  // priceUsdFoil   String?
  // priceEur       String?
  // priceEurFoil   String?
  // priceTix       String?

  // Relationships
  deckCards ArchenemyDeckCard[]
}

model ArchenemyDeck {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  deckCards ArchenemyDeckCard[]

  User   User? @relation(fields: [userId], references: [id])
  userId Int?
}

// Junction table for many-to-many relationship
model ArchenemyDeckCard {
  id     String @id @default(cuid())
  deckId String
  cardId String

  deck ArchenemyDeck @relation(fields: [deckId], references: [id], onDelete: Cascade)
  card ArchenemyCard @relation(fields: [cardId], references: [id], onDelete: Cascade)

  @@unique([deckId, cardId])
  @@map("DeckCards")
}
